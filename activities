
/**
 * Fetches account activities from Alpaca for the last 90 days,
 * filters out 'FILL' activities, and writes the remaining activities
 * to a new or existing sheet named "Other Activities".
 * It only appends new activities to avoid re-writing existing data.
 */
function updateOtherActivitiesSheet() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var otherActivitiesSheet = ss.getSheetByName("Other Activities");

  Logger.log("--- Starting updateOtherActivitiesSheet ---");

  // Create sheet if it doesn't exist
  if (!otherActivitiesSheet) {
    Logger.log("Creating new 'Other Activities' sheet.");
    otherActivitiesSheet = ss.insertSheet("Other Activities");
  } else {
    Logger.log("Found 'Other Activities' sheet.");
    // Clear content but leave the header row if the sheet already exists
    if (otherActivitiesSheet.getLastRow() > 1) {
      otherActivitiesSheet.getRange("A2:Z").clearContent();
      Logger.log("Cleared existing data (A2:Z) in 'Other Activities' sheet.");
    }
  }

  // Define comprehensive headers for various activity types
  var headers = [
    "ID", "Activity Type", "Date", "Symbol", "Quantity", "Price", "Side",
    "Net Amount", "Description", "Transaction Time", "Type", "Status",
    "Per Share Amount", "Withholding Tax", "Settled At", "Asset Class",
    "Cumulative Quantity", "Leaves Quantity", "Order ID", "Client Order ID",
    "Order Type", "Time in Force", "Asset ID", "External ID", "Custodian ID",
    "Account ID", "Subaccount ID", "Funding Type", "Direction", "Method",
    "Reason", "Comments", "Source", "Destination", "Amount", "Fee"
  ];
  
  // Write headers to ensure they are present and correct
  otherActivitiesSheet.getRange(1, 1, 1, headers.length).setValues([headers]).setFontWeight("bold");
  otherActivitiesSheet.autoResizeColumns(1, headers.length); // Auto-resize headers
  Logger.log("Headers written to 'Other Activities' sheet.");

  // --- Retrieve existing activity IDs from the sheet to prevent duplicates ---
  var existingActivityIds = new Set();
  if (otherActivitiesSheet.getLastRow() > 1) {
    var existingDataRange = otherActivitiesSheet.getRange("A2:A" + otherActivitiesSheet.getLastRow());
    existingDataRange.getValues().forEach(function(row) {
      if (row[0]) { 
        existingActivityIds.add(row[0]);
      }
    });
  }
  Logger.log("Number of existing activity IDs on sheet: " + existingActivityIds.size);

  // --- Fetch all activities using the helper function ---
  Logger.log("Calling listActivities() to retrieve all activities from Alpaca.");
  var allActivities = listActivities(); 
  Logger.log("Total activities retrieved from Alpaca (last 90 days): " + allActivities.length);

  // --- Filter for new activities that are NOT 'FILL' ---
  Logger.log("Filtering for new activities that are NOT 'FILL' and not already on the sheet.");
  var newOtherActivities = allActivities.filter(function(activity) {
    var isNotFill = (activity.activity_type !== "FILL");
    var isNew = !existingActivityIds.has(activity.id);

    if (isNotFill && isNew) {
      Logger.log("  NEW OTHER ACTIVITY: ID: " + activity.id + ", Type: " + activity.activity_type);
    } else if (!isNew) {
      Logger.log("  EXISTING OTHER ACTIVITY (skipped): ID: " + activity.id + ", Type: " + activity.activity_type);
    }
    return isNotFill && isNew;
  });

  Logger.log("Number of NEW 'other' activities found to write: " + newOtherActivities.length);

  // --- Prepare data for writing to the sheet ---
  if (newOtherActivities.length > 0) {
    Logger.log("Preparing data for " + newOtherActivities.length + " new 'other' activities.");
    var activityData = newOtherActivities.map(function(activity) {
      return [
        activity.id || "", activity.activity_type || "", activity.date || "", activity.symbol || "",
        activity.qty || "", activity.price || "", activity.side || "", activity.net_amount || "",
        activity.description || "", activity.transaction_time || "", activity.type || "", activity.status || "",
        activity.per_share_amount || "", activity.withholding_tax || "", activity.settled_at || "",
        activity.asset_class || "", activity.cum_qty || "", activity.leaves_qty || "", activity.order_id || "",
        activity.client_order_id || "", activity.order_type || "", activity.time_in_force || "",
        activity.asset_id || "", activity.external_id || "", activity.custodian_id || "",
        activity.account_id || "", activity.subaccount_id || "", activity.funding_type || "",
        activity.direction || "", activity.method || "", activity.reason || "", activity.comments || "",
        activity.source || "", activity.destination || "", activity.amount || "", activity.fee || ""
      ];
    });

    // Append data starting from the last row + 1
    otherActivitiesSheet.getRange(otherActivitiesSheet.getLastRow() + 1, 1, activityData.length, activityData[0].length).setValues(activityData);
    otherActivitiesSheet.autoResizeColumns(1, activityData[0].length);
    Logger.log("Successfully wrote new 'other' activity data to 'Other Activities' sheet.");
  } else {
    Logger.log("No NEW 'other' activities to write to 'Other Activities' sheet.");
  }
  Logger.log("--- Finished updateOtherActivitiesSheet ---");
}

